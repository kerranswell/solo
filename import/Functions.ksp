function fill1DArray(arr, val)
	declare i

	for i := 0 to arr.SIZE_D1-1
		arr[i] := val
	end for
end function

function fill2DArray(arr, val)

	declare i
	declare j

	for i := 0 to arr.SIZE_D1-1
		for j:= 0 to arr.SIZE_D2-1
			arr[i,j] := val
		end for
	end for
end function

function Time_linear(v1, v2, time) -> result
	result := (v2 - v1) / time
end function

function Time_getCurrentTime -> result
	result := $ENGINE_UPTIME
end function

function smooth_array(array, smoothness)
	declare i
	declare j
	for i := 1 to smoothness
		for j := 1 to num_elements(array)-2
			array[j] := (array[j-1] + array[j] + array[j+1]) / 3
		end for
	end for
end function

function linearEq_slideIn_from_cc(x) -> result
	result := ((6000 / 63) * (x - 1) + 3000) / 10
end function

function linearEq(x, x1, y1, x2, y2, scale) -> result
	
	result := -1 * (scale * ((x1*y2 - x2*y1) + (y1 - y2) * x)) / (x2 - x1)

end function