function Groups_prepare(i)
    PlayMode_copy(playMode, Playing[i].playMode)
    resetGroups()
    setActiveGroups()
    disallow_group($ALL_GROUPS)
    allowGroups(i)     
end function

function resetGroups
    for i := 0 to Globals.maxGroups-1
        activeGroups[i] := -1
    end for
end function

function allowGroups(ind)
    declare r

    if (Playing[ind].playmode.slideUp # 0 or Playing[ind].playmode.slideDown # 0)
        r := abs(lastNote.note - nextNote.note)-1
        if (r > 5 or r < 1)

        end if
    else 
        declare min := 0
        declare max := Globals.maxGroups-1

        for i := 0 to Globals.maxGroups-1
            if (activeGroups[i] # -1)
                max := i
            end if
        end for

        if (UI.try = 0)
            r := random(min, max)
        else
            r := UI.try - 1
        end if
    end if

    Globals.lastGroupIndex := activeGroups[r]
    Globals.lastTakeIndex := r+1
    allow_group(Globals.lastGroupIndex)
end function

function setActiveGroups
    declare tmp
    declare @gname
    @gname := formGroupName()
    // debug2(@gname)
    declare zg := zeroGroup()
    declare takeCount := Globals.takeCounts[playMode.artCode]

    for i := 0 to takeCount-1
        tmp := find_group(@gname & "_t" & (i+1))
        if (tmp = 0 and zg = 0)
            tmp := -1
        end if
        if (tmp >= 0 )
            // debug("zg: " & zg & "; gn = " & @gname & "_t" & (i+1) & "; found: " & tmp)            
            activeGroups[i]  := tmp
        end if
    end for
end function

function zeroGroup -> result
    result := 0
    if (playMode.rh_Muted = 0 and playMode.pickDown = 1 and playMode.lh_Vibrato = 0)
        result := 1
    end if
end function

function formGroupName() -> result

    declare !rh_muted[2]
    !rh_muted[0] := "o"
    !rh_muted[1] := "m"
{     if (UI.softMute = 0)
        !rh_muted[1] := !rh_muted[1] & "2"
    end if
 }
    declare !pickDown[2]
    !pickDown[0] := "_pu"
    !pickDown[1] := "_pd"
    result := rh_muted[playMode.rh_Muted] & pickDown[playMode.pickDown]

    if (playMode.lh_Vibrato > 0)
        result := "v" & playMode.lh_Vibrato
    end if

    if (playMode.slideIn > 0)
        result := "si"
    end if

    if (playMode.slideOut > 0)
        result := "so"
    end if

    if (playMode.slideUp > 0)
        result := "su"
    end if

    if (playMode.slideDown > 0)
        result := "sd"
    end if

    if (playMode.slideUp2 > 0)
        result := "si"
    end if

    if (playMode.slideDown2 > 0)
        result := "so"
    end if

    if (UI.tapSamples = 1 and (playModeGlobal.pm.legato = 1 or playModeGlobal.tapping = 1))
        if (playModeGlobal.dir > 0)
            result := "ton"
        else if (playModeGlobal.dir < 0)
            result := "tof"
        end if
    end if

    if (playMode.pickNoise > 0)
        !rh_muted[0] := "pn"
        !rh_muted[1] := "mpn"

        !pickDown[0] := "_up"
        !pickDown[1] := "_dn"
        result := rh_muted[playMode.rh_Muted] & pickDown[playMode.pickDown]
    end if

end function
